# Daily Notes of Love - Cursor Rules Definition

## Rule Structure Definition

1. Rules for this project are structured as follows:
   - Primary rules reside in the root `.cursorrules` file (this file)
   - Detailed rules are stored as XML files in the `.rules/` directory
   - Each rule file follows the naming convention `<rule-name>.xml`
   - Rule files must be properly formatted XML with consistent structure

2. Rule file structure:
   - Each rule file MUST use the `<rule>` root element with appropriate id and type attributes
   - Each rule file MUST include a `<meta>` section with title, version, and scope
   - Each rule file SHOULD follow the information-dense format for AI/LLM consumption
   - XML structure should group related concepts under appropriate tags
   - Use semicolon-delimited lists for concise rule presentation where appropriate
   - Code examples should use CDATA sections to preserve formatting

3. AI agents interacting with this codebase MUST:
   - Read and adhere to all rules specified in the `.rules/*.xml` files
   - Always reference the appropriate rule when making decisions that involve rule adherence
   - When rules conflict, follow the most specific rule relevant to the current context
   - When no specific rule exists, follow general best practices and notify the user

## Rule Locations and Purposes

The following rules exist and should be referenced for related concerns:

1. `.rules/project-overview.xml` - Core project information and architecture
2. `.rules/security-model.xml` - Security architecture and practices
3. `.rules/heroui-best-practices.xml` - HeroUI component library usage patterns
4. `.rules/ui-and-language.xml` - UI components and German language requirements
5. `.rules/deployment.xml` - Deployment process and configuration
6. `.rules/code-style.xml` - Code formatting and organization standards

Each rule file contains detailed guidelines in an information-dense format optimized for AI/LLM processing while maintaining human readability. When working on a specific part of the codebase, check the most relevant rule files first.

## Rule Precedence

1. Security rules take highest precedence over all other rules
2. Deployment rules take precedence over UI and code style rules
3. UI/language rules take precedence over general code style
4. When conflicts occur, security and correctness should never be compromised

## Rule Format

All rules are formatted using a custom XML schema designed for AI/LLM consumption:

```xml
<rule id="rule-name" type="priority-level">
  <meta>
    <title>Rule Title</title>
    <version>1.0</version>
    <scope>files:pattern-to-apply-to</scope>
  </meta>
  
  <section-name>
    <subsection>Concise; Semicolon-delimited; Information-dense guidance</subsection>
  </section-name>
  
  <!-- Additional sections as needed -->
  
  <references>
    <ref>ShortName:URL</ref>
  </references>
</rule>
```